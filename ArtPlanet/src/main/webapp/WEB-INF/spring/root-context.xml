<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<bean id="datasource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="artplanet" />
		<property name="resourceRef">
			<value>true</value>
		</property>
	</bean>
	
	<!-- 마이바티스 지원을 위한 빈 등록 -->
	<!-- 1]SqlSessionFactory -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 데이타소스:데이타베이스 연결정보 -->
		<property name="dataSource" ref="datasource" />
		<!-- 환경설정 파일 위치 설정 -->
		<property name="configLocation"
			value="classpath:mybatis/ArtPlanetConfiguration.xml" />
	</bean>
	
	<!-- 2]SqlSessionTemplate -->
	<bean id="template" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
		
		
	<!-- <bean id="csrfSecurityRequestMatcher" class="kr.re.kinac.pfp.component.CsrfSecurityRequestMatcher" /> -->
    <!--  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="524288000" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

	 -->
	 
		<!-- 테스트용 잡  -->
	<!-- 	<bean id="testJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		    서비스 구현 객체의 빈 이름을 인자로 줍니다.
		    <property name="targetObject" ref="boardServiceImpl" />
		    서비스 객체에서 주기적으로 실행될 메소드른 지정합니다.
		    <property name="targetMethod" value="testJobMethod" />
		    동시 실행을 방지합니다.
		    <property name="concurrent" value="false" />
		</bean>
		
		테스트용  트리거
		<bean id="testJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		    <property name="jobDetail" ref="testJob" />
		    CronTrigger를 사용하여 2분 간격으로 실행되도록 지정했습니다.
		    <property name="cronExpression" value="0/2 0 * * * ?" />
		</bean>
		
		테스트용 스케줄러
		<bean id="testJobScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		    <property name="triggers">
		        앞에서 설정한 트리거를 등록합니다. 필요하면 여러개 만들어서 등록하면 됩니다.
		       <list><ref bean="testJobTrigger" /></list>
		    </property>
		</bean> -->

</beans>
