--회원 테이블 조회
SELECT * FROM MEMBER;
--권한 테이블 조회
SELECT * FROM AUTH_SECURITY ;

COMMIT;


--INSERT INTO  테이블명(컬럼명1,컬러명2,---------,컬러명N)
--VALUES(값1,값2,---------------,값N)

INSERT INTO AUTH_SECURITY VALUES(78, 'ROLE_USER', 78, 1, 'TEST78')


INSERT INTO MEMBER VALUES(77,'TEST77', 'TEST77', 'TEST77', '안준식', '11111111111',
'TEST77', '2019-01-02', NULL, NULL, NULL, NULL, NULL);

INSERT INTO MEMBER VALUES(78,'TEST78', 'TEST78', 'TEST78', '안용주', '11111111112',
'TEST77', '2019-02-02', NULL, NULL, NULL, NULL, NULL);

INSERT INTO MEMBER VALUES(79,'TEST79', 'TEST79', 'TEST79', '한진섭', '11111111113',
'TEST79', '2019-03-02', NULL, NULL, NULL, NULL, NULL);

INSERT INTO MEMBER VALUES(80,'TEST80', 'TEST80', 'TEST80', '조종수', '11111111114',
'TEST80', '2019-04-02', NULL, NULL, NULL, NULL, NULL);

INSERT INTO MEMBER VALUES(81,'TEST81', 'TEST81', 'TEST81', '김승찬', '17777777777',
'TEST81', '2019-05-02', NULL, NULL, NULL, NULL, NULL);

INSERT INTO MEMBER VALUES(82,'TEST82', 'TEST82', 'TEST82', '이종성', '11111111115',
'TEST82', '2019-05-02', NULL, NULL, NULL, NULL, NULL);

INSERT INTO MEMBER VALUES(83,'TEST83', 'TEST83', 'TEST83', '손재윤', '11111111116',
'TEST83', '2019-12-02', NULL, NULL, NULL, NULL, NULL);

/*
일반적으로 date 혹은 datetime 이면
select substring(날짜필드,6,2) as month, count(*) as tot
from 테이블
where 날짜필드 between '2004-01-01' and '2004-12-31'
group by substring(날짜필드,6,2)
*/

-- 월별 신규가입회원 수 조회
SELECT SUBSTR(MEMBERSHIPDATE,4,2) AS 월, COUNT(*) AS TOT
FROM MEMBER
WHERE MEMBERSHIPDATE BETWEEN '2019-01-01' AND '2019-12-31'
GROUP BY SUBSTR(MEMBERSHIPDATE,4,2)
ORDER BY SUBSTR(MEMBERSHIPDATE,4,2);

-- 월별 누적회원 수 조회
SELECT MONTH, TOT AS 월별신규가입회원수,
       --SUM(TOT) AS 월별누적회원수,
       SUM(SUM(TOT)) OVER(ORDER BY MONTH ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) 누적회원
FROM (SELECT SUBSTR(MEMBERSHIPDATE,4,2) AS MONTH, COUNT(*) AS TOT
        FROM MEMBER
        WHERE MEMBERSHIPDATE BETWEEN '2019-01-01' AND '2019-12-31'
        GROUP BY SUBSTR(MEMBERSHIPDATE,4,2)
        ORDER BY SUBSTR(MEMBERSHIPDATE,4,2))
WHERE MONTH BETWEEN '01' AND '12'
GROUP BY MONTH, TOT
ORDER BY MONTH;



-- 종성이형 참고하는 쿼리문 

--가상 테이블
WITH TEST_TABLE AS (
    SELECT '고구려' COUNTRY, '1대' ST, '동명성왕'   KING_NM FROM DUAL UNION ALL
    SELECT '고구려' COUNTRY, '3대' ST, '대무신왕'   KING_NM FROM DUAL UNION ALL
    SELECT '백제'   COUNTRY, '1대' ST, '온조왕'     KING_NM FROM DUAL UNION ALL
    SELECT '고구려' COUNTRY, '2대' ST, '유리왕'     KING_NM FROM DUAL UNION ALL
    SELECT '백제'   COUNTRY, '3대' ST, '기루왕'     KING_NM FROM DUAL UNION ALL
    SELECT '신라'   COUNTRY, '1대' ST, '남해왕'     KING_NM FROM DUAL UNION ALL
    SELECT '신라'   COUNTRY, '1대' ST, '박혁거세'   KING_NM FROM DUAL UNION ALL
    SELECT '백제'   COUNTRY, '2대' ST, '다루왕'     KING_NM FROM DUAL UNION ALL
    SELECT '신라'   COUNTRY, '1대' ST, '유리이사금' KING_NM FROM DUAL
)

--조회 쿼리
SELECT COUNTRY
     , WM_CONCAT(KING_NM) KING_NM
  FROM TEST_TABLE
 GROUP BY COUNTRY;



-- 관리자 계정 만들기
INSERT INTO MEMBER(MEMBERNO, ID, PASSWORD, NAME, PHONENUMBER, ADDRESS, NICKNAME)
VALUES(11111, 'ADMIN', 'ADMIN', 'ADMIN', '11111111111', 'ADMIN', 'ADMIN');

-- 관리자 계정 권한주기
INSERT INTO AUTH_SECURITY(AUTHORITYNO, AUTHORITY, MEMBERNO, ENABLED, ID)
VALUES(11111, 'ROLE_ADMIN', 11111, DEFAULT, 'ADMIN');
	
-- 커밋    
COMMIT;    

--구독 테이블 예시데이터 입력
INSERT INTO SUBSCRIBE VALUES(1, TO_DATE('20191120 20:55:55','YYYYMMDD HH24:MI:SS'), 2, 3);
INSERT INTO SUBSCRIBE VALUES(2, TO_DATE('20191120 20:55:55','YYYYMMDD HH24:MI:SS'), 5, 6);
INSERT INTO SUBSCRIBE VALUES(3, TO_DATE('20191120 21:04:00','YYYYMMDD HH24:MI:SS'), 7, 8);


-- 정기구독결제 해야하는 레코드 총 수를 반환하는 쿼리문 :  현재날짜 - 구독시작일 > = 3분
SELECT COUNT(*) AS PAYRECORDS FROM SUBSCRIBE WHERE (TRUNC(SYSDATE, 'MI') - TRUNC(SUBSCRIBESTARTDATE,'MI'))*1400 >= 3


-- 정기구독결제 해야하는 레코드 리스트를 반환하는 쿼리문 
SELECT *
FROM SUBSCRIBE
WHERE (TRUNC(SYSDATE, 'MI') - TRUNC(SUBSCRIBESTARTDATE,'MI'))*1400 >= 3;


-- 프로젝트 테이블에서 마감날짜 = 현재날짜 레코드 수 구하는 쿼리
SELECT COUNT(*) FROM PROJECT WHERE DEADLINE = SYSDATE

-- 프로젝트테이블과 프로젝트 후원정보 테이블을 조인하는 쿼리
SELECT *
FROM PROJECT P JOIN PROJECTSUPPORT PS ON P.PROJECTNO = PS.PROJECTSUPPORT 

-- 프로젝트 테이블 예시데이터 삽입
--(프로젝트 일련번호-PK, 제목, 내용, 등록일, 마감일, 목표액, 등록한 회원번호)
INSERT INTO PROJECT VALUES(1, '프로젝트1', '프로젝트1내용', '2019-06-04', '2019-11-21', 18000, 1); 
INSERT INTO PROJECT VALUES(2, '프로젝트2', '프로젝트2내용', '2019-06-05', '2019-11-21', 4000, 1);
INSERT INTO PROJECT VALUES(3, '프로젝트3', '프로젝트3내용', '2019-06-06', '2019-11-21', 5000, 1);
INSERT INTO PROJECT VALUES(4, '프로젝트4', '프로젝트4내용', '2019-06-07', '2019-11-21', 5000, 1);

-- 프로젝트 후원정보 테이블 예시 데이터 삽입
-- (프로젝트 후원정보 일련번호-PK, 후원금액, 후원일, 회원번호(FK), 프로젝트 글번호(FK))
INSERT INTO PROJECTSUPPORT VALUES(1, 1000, '2019-11-20', 1, 1);
INSERT INTO PROJECTSUPPORT VALUES(2, 2000, '2019-11-20', 2, 1);
INSERT INTO PROJECTSUPPORT VALUES(3, 3000, '2019-11-20', 1, 1);
INSERT INTO PROJECTSUPPORT VALUES(4, 4000, '2019-11-20', 3, 1);
INSERT INTO PROJECTSUPPORT VALUES(5, 4000, '2019-11-20', 1, 2);
INSERT INTO PROJECTSUPPORT VALUES(6, 5000, '2019-11-20', 2, 3);
INSERT INTO PROJECTSUPPORT VALUES(7, 5000, '2019-11-20', 3, 4);
INSERT INTO PROJECTSUPPORT VALUES(8, 8000, '2019-11-20', 3, 1);
COMMIT;

-- 프로젝트 테이블 전체 조회
SELECT * FROM PROJECT;
-- 프로젝트 후원정보 테이블 전체 조회
SELECT * FROM PROJECTSUPPORT;

-- 프로젝트 별 누적후원액수 조회
SELECT DISTINCT PROJECTNO,
SUM(PROJECTSUPPORTSUM) OVER (PARTITION BY PROJECTNO ORDER BY PROJECTSUPPORTDATE) TOTALSUPPORT
FROM PROJECTSUPPORT

-- 프로젝트 테이블과 프로젝트별 후원금액 누적 쿼리결과로 나온 테이블을 조인
-- 조인은 프로젝트 글번호를 통해
SELECT COUNT(*)
FROM PROJECT P JOIN 
                    -- 프로젝트별 누적후원금액 테이블을 반환하는 서브쿼리
                    (SELECT DISTINCT PROJECTNO,
                    SUM(PROJECTSUPPORTSUM) OVER (PARTITION BY PROJECTNO ORDER BY PROJECTSUPPORTDATE) TOTALSUPPORT
                    FROM PROJECTSUPPORT) SUM
-- 프로젝트번호를 통해 조인                     
ON P.PROJECTNO = SUM.PROJECTNO
-- 프로젝트 누적후원금액(TOTALSUPPORT) >= 프로젝트 목표액(TARGETFIGURE) 경우 
-- AND 프로젝트 마감일이 현재일과 동일한 경우
WHERE TO_DATE(SYSDATE,'YYYY-MM-DD') = TO_DATE(DEADLINE, 'YYYY-MM-DD') AND TOTALSUPPORT >= TARGETFIGURE;




