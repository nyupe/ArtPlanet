<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper    

PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    

"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 

	private String blogNo; //글번호

	private String title; //글제목

	private String content; //글내용

	private java.util.Date postDate; //작성일

	private int viewCount; //조회수

	private String categorie; // 카테고리

	private String accessRight; //열람권한

	private String memberNo; //(작성자)회원번호

 -->

<mapper namespace="mybatis.BlogPost">

	<!-- 처음 넘겨주는 map에는  blogNo라는 키값은 없지만 아래 selectKey구문에서 map에 blogNo라는 키값으로 데이터를 넣어준다. 따라서 아래에서 #{blogNo}와 같이 사용가능 -->

	<!-- 반환할때 역시 map.get("blogNo")로 방금 입력된 데이터를 받을 수 있다 -->

	<insert id="uploadBlogPost" parameterType="java.util.Map">

		<selectKey keyProperty="blogNo" resultType="int" order="BEFORE">

			SELECT SEQ_BLOGPOST_blogNo.NEXTVAL FROM DUAL

		</selectKey>

		INSERT INTO blogPost(blogNo, title, content, postDate, viewCount, categorie, accessRight, memberNo)

			VALUES(#{blogNo}, #{title}, #{content}, SYSDATE, 0, #{categorie}, #{accessRight}, #{memberNo})

	</insert>

	

	<select id="selectArtworkList" parameterType="java.util.Map" resultType="BlogPostDTO">

		SELECT * FROM (

			SELECT tb.*, ROWNUM AS r FROM (

				SELECT * FROM blogPost ORDER BY blogNo DESC) tb)

			WHERE r BETWEEN #{start} AND #{end}

	</select>

	

	<select id="getTotalCount" parameterType="java.util.Map" resultType="int">

		SELECT COUNT(*) FROM blogPost

	</select>

	

	<select id="getDtoByBlogNo" parameterType="java.util.Map" resultType="BlogPostDTO">

		SELECT * FROM blogPost WHERE blogNo=#{blogNo}

	</select>

	

	<update id="updateViewCount" parameterType="java.util.Map">

		UPDATE blogPost SET viewCount = viewCount+1 WHERE blogNo=#{blogNo}

	</update>

	

	<select id="getDtoByMemberNo" parameterType="java.util.Map" resultType="BlogPostDTO">

		SELECT * FROM blogPost WHERE memberNo=#{memberNo} ORDER BY blogNo DESC

	</select>

	

	<select id="getPublicByMemberNo" parameterType="java.lang.String" resultType="BlogPostDTO">

		SELECT * FROM blogPost WHERE memberNo=#{memberNo} AND accessRight = 0

	</select>

	<!-- 댓글관련 -->

	<!-- 코멘트 입력하기 -->

	<insert id="BlogInsertComment" parameterType="java.util.Map">

		INSERT INTO REPLY(replyNo,replyContent,memberNo,blogNo) 

			VALUES(SEQ_REPLY_replyNo.Nextval,#{replyContent},#{memberNo},#{blogNo})

	</insert>

	<!-- 코멘트 리스트 뿌리기 -->

	<select id="BlogSelectListComment" parameterType="java.util.Map" resultType="java.util.Map">

		SELECT r.*,id,profilePicture,nickname FROM REPLY r JOIN MEMBER m on r.memberNo = m.memberNo WHERE r.blogNo = #{blogNo}

	</select>

	<!-- 코멘트카운트 -->

	<select id="BlogCommentCount" parameterType="java.util.Map" resultType="int">

		SELECT COUNT(*) FROM REPLY WHERE blogNo = #{blogNo}

	</select>
	
	<!-- 이미지 태그검색 -->
	<select id="imgTagSearch" parameterType="java.util.Map" resultType="java.lang.String">		
		SELECT DISTINCT tagNo FROM tag WHERE
		<foreach collection="tagArr" item="tagName" index="index" open="(" close=")" separator="or">
        	tagName = #{tagName}
        </foreach>
	</select>
	
	<select id="tagRelSearch" parameterType="java.util.Map" resultType="java.lang.String">		
		SELECT DISTINCT blogNo FROM tagRelation WHERE
		<foreach collection="tagNoList" item="tagNo" index="index" open="(" close=")" separator="or">
        	tagNo = #{tagNo} AND blogNo IS NOT NULL
        </foreach>
	</select>
	
	<select id="getDtoByList" parameterType="java.util.Map" resultType="BlogPostDTO">		
	SELECT * FROM (
		SELECT tb.*, ROWNUM AS r FROM (
			SELECT DISTINCT * FROM blogPost WHERE
			<foreach collection="blogNoList" item="blogNo" index="index" open="(" close=")" separator="or">
	        	blogNo = #{blogNo}
	        </foreach>) tb)
        WHERE r BETWEEN #{start} AND #{end}
	</select>

</mapper>
