<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace속성:매퍼파일의 완전한경로 .xml는 생략 -->
<!-- ※ibatis와는 다르게 id값에 .(dot)를 사용 못한다. -->

<mapper namespace="mybatis.Member">
	
	
	<!-- 회원 리스트 전체조회 -->
	<select id="getMemberList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM MEMBER ORDER BY MEMBERNO DESC
	</select>
	
	<!-- 로그인 처리  -->
	<select id="loginProcess" parameterType="java.util.Map" resultType="int">
			SELECT COUNT(*) FROM MEMBER WHERE ID = #{id} and PWD = #{pwd}
	</select>	
	
	<!-- 회원가입 처리 -->
	<insert id="memberInsert" parameterType="java.util.Map" >
			INSERT INTO MEMBER(MEMBERNO, ID, PASSWORD, NAME, PHONENUMBER, ADDRESS, NICKNAME, BIRTH, PROFILEPICTURE)
			<!-- 회원번호(시퀀스), 아이디, 비밀번호, 이름, 핸드폰번호, 주소, 생년월일, 프로필사진-디폴트값 필요, 가입일(현재날짜로 자동초기화) -->
			VALUES(SEQ_MEMBER_memberNo.NEXTVAL, #{id}, #{password}, #{name}, #{phoneNumber}, #{address}, #{nickName}, #{birth}, #{profilePicture} )
	</insert>
	
	<!-- 아이디 중복 처리 -->
	<select id="memberIsDuplicated" parameterType="java.util.Map" resultType="int">
			SELECT COUNT(*) FROM MEMBER WHERE ID = #{id} 
	</select>
	
	<!-- 닉네임 중복 처리 -->
	<select id="nickNameIsDuplicated" parameterType="java.util.Map" resultType="int">
			SELECT COUNT(*) FROM MEMBER WHERE NICKNAME = #{nickName} 
	</select>
	
	<!-- 닉네임 수정처리  -->
	<update id="MemberUpdate" parameterType="java.util.Map">
			UPDATE MEMBER SET NICKNAME = #{nickName} WHERE ID = #{id}
	</update>
	
	<!-- 회원정보 조회  -->
	<select id="getMemberDTO" parameterType="java.util.Map" resultType="MemberDTO">
			SELECT * FROM MEMBER WHERE ID = #{id}
	</select>
	
	<!-- 아이디로 회원번호 조회 -->
	<select id="getMemberNo" parameterType="java.lang.String" resultType="String">
			SELECT MEMBERNO FROM MEMBER WHERE ID = #{id}
	</select>
	
	<!-- 회원 탈퇴처리  -->
	<delete id="MemberDelete" parameterType="java.util.Map">
			DELETE MEMBER WHERE ID = #{id}
	</delete>
	
	<!-- 월별가입회원수조회 -->
	<select id="getMemberTotal" parameterType="java.util.Map" resultType="MonthTotDTO">
			SELECT SUBSTR(MEMBERSHIPDATE,4,2) AS MONTH, COUNT(*) AS TOT FROM MEMBER
			WHERE MEMBERSHIPDATE BETWEEN '2019-01-01' AND '2019-12-31'
			GROUP BY SUBSTR(MEMBERSHIPDATE,4,2)
			ORDER BY SUBSTR(MEMBERSHIPDATE,4,2)
	</select>
	
	
	<!-- 수업예제 쿼리문  -->
	<!-- <select id="memoIsLogin" parameterType="java.util.Map" resultType="int">
			SELECT COUNT(*) FROM MEMBER WHERE ID = #{id} and PWD = #{pwd}
	</select> 

	<select id="memoSelectlist" parameterType="java.util.Map" resultType="OneMemoDTO">
			SELECT * FROM (SELECT T.*, ROWNUM R FROM(SELECT O.*, NAME,(SELECT COUNT(*) FROM MEMOCOMMENT WHERE NO = O.NO ) commentCount FROM ONEMEMO O JOIN MEMBER M ON O.ID = M.ID
			<if test="searchColumn != null">
				WHERE ${searchColumn} LIKE '%' || #{searchWord} || '%'
			</if> 
			ORDER BY NO DESC) T)
			WHERE R BETWEEN #{start} AND #{end}
	</select>
	
	<select id="memoTotal" parameterType="java.util.Map" resultType="int">
			SELECT COUNT(*) FROM ONEMEMO
			<if test="searchColumn != null">
				WHERE ${searchColumn} LIKE '%' || #{searchWord} || '%'
			</if> 
	</select>
	
	<insert id="memoInsert" parameterType="java.util.Map" >
			INSERT INTO ONEMEMO(NO, TITLE, CONTENT, ID)
			VALUES(SEQ_ONEMEMO.NEXTVAL, #{title}, #{content}, #{id} )
	</insert>
	
	<select id="memoSelectOne" parameterType="java.util.Map" resultType="OneMemoDTO">
			SELECT O.*,NAME FROM ONEMEMO O JOIN MEMBER M ON O.ID = M.ID
			WHERE NO = #{no} 
	</select>
	
	<select id="memoUpdate" parameterType="java.util.Map" >
			UPDATE ONEMEMO SET TITLE = #{title}, CONTENT = #{content} WHERE NO = #{no}
	</select>
	
	<delete id="memoDelete" parameterType="java.util.Map" >
			DELETE ONEMEMO WHERE NO = #{no}
	</delete> -->
</mapper>
